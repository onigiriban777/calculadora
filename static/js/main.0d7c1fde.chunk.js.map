{"version":3,"sources":["components/myCalculator.js","App.js","reportWebVitals.js","index.js"],"names":["SetId","numeros","MyCalculator","numbers","useState","input","setInput","BorrarResultado","Fragment","id","xs","variant","map","onClick","event","target","value","className","String","eval","length","includes","toFixed","console","log","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"u5CAOA,SAASA,MAAMC,GACX,OAAOA,GACH,KAAK,EACG,MAAO,MAEf,KAAK,EACG,MAAO,MAEf,KAAK,EACG,MAAO,QAEf,KAAK,EACG,MAAO,OAEf,KAAK,EACG,MAAO,OAEf,KAAK,EACG,MAAO,MAEf,KAAK,EACG,MAAO,QAEf,KAAK,EACG,MAAO,QAEf,KAAK,EACG,MAAO,OAEf,KAAK,EACG,MAAO,OAEf,IAAK,IACG,MAAO,MAEf,IAAK,IACG,MAAO,YAEf,IAAK,IACG,MAAO,WAEf,IAAK,IACG,MAAO,SAEf,IAAK,KAGL,IAAK,IACD,MAAO,SASJ,SAASC,eACxB,IAAMC,QAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KADE,UAEbC,oDAAS,IAFI,uLAEhCC,MAFgC,cAEzBC,SAFyB,cAKvC,SAASC,kBACLD,SAAS,IAIT,OAEI,2DAAC,6CAAME,SAAP,UACI,4DAAC,yDAAD,CAAWC,GAAG,iBAAd,UACI,2DAAC,mDAAD,CAAKC,GAAI,GAAT,SACI,2DAAC,iDAAD,CAAYC,QAAQ,KAAKF,GAAG,aAA5B,qCAEJ,2DAAC,mDAAD,UACI,2DAAC,iDAAD,CAAYE,QAAQ,KAAIF,GAAG,UAA3B,SAAsCJ,UAE1C,4DAAC,mDAAD,CAAKK,GAAI,EAAGD,GAAG,oBAAf,UACCN,QAAQS,KAAI,SAAAT,GAAO,OACZ,sEAAQU,QAAS,SAACC,GACdR,SAASD,MAAQS,EAAMC,OAAOC,QAElCA,MAAOb,EAEPM,GAAIT,MAAMG,GACVc,UAAU,UANV,UAOE,GAAId,IAHDA,MAKR,qEACXU,QAAS,iBAACC,OACR,IACER,SACEY,OAAOC,KAAKd,QAAQe,OAAS,GAC3BF,OAAOC,KAAKd,QAAQgB,SAAS,KAC3BH,OAAOC,KAAKd,OAAOiB,QAAQ,IAC3BJ,OAAOC,KAAKd,SAElB,MAAOS,OACPS,QAAQC,IAAIV,SAGhBE,MAAM,IACNP,GAAG,QAdQ,kBAmBL,4DAAC,mDAAD,CAAKC,GAAI,GAAT,UACA,qEAAQD,GAAG,QAAQI,QAASN,gBAA5B,mBACA,qEAAQE,GAAG,MAAMQ,UAAU,cAAcJ,QAAS,SAACC,GAAD,OAAWR,SAASD,MAAQS,EAAMC,OAAOC,QAAQA,MAAM,IAAzG,eACA,sEAAQP,GAAG,YAAYQ,UAAU,cAAcJ,QAAS,SAACC,GAAD,OAAWR,SAASD,MAAQS,EAAMC,OAAOC,QAAQA,MAAM,IAA/G,UAAoH,IAApH,IAA0H,OAC1H,sEAAQP,GAAG,WAAWQ,UAAU,cAAcJ,QAAS,SAACC,GAAD,OAAWR,SAASD,MAAQS,EAAMC,OAAOC,QAAQA,MAAM,IAA9G,UAAoH,IAApH,OAEA,sEAAQP,GAAG,SAASQ,UAAU,cAAcJ,QAAS,SAACC,GAAD,OAAWR,SAASD,MAAQS,EAAMC,OAAOC,QAAQA,MAAM,IAA5G,UAAiH,IAAjH,iB,wKC9GDS,MARf,WACE,OACE,qBAAKR,UAAU,MAAf,SACE,cAAC,IAAD,OCOSS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0d7c1fde.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport './myCalculator.css';\r\nimport {Grid, Typography} from '@material-ui/core';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nfunction SetId(numeros) {\r\n    switch(numeros){\r\n        case 1:\r\n                return 'one';\r\n                break;\r\n        case 2:\r\n                return 'two';\r\n                break;\r\n        case 3:\r\n                return 'three';\r\n                break;\r\n        case 4:\r\n                return 'four';\r\n                break;  \r\n        case 5:\r\n                return 'five';\r\n                break;\r\n        case 6:\r\n                return 'six';\r\n                break;\r\n        case 7:\r\n                return 'seven';\r\n                break;   \r\n        case 8:\r\n                return 'eight';\r\n                break;    \r\n        case 9:\r\n                return 'nine';\r\n                break;\r\n        case 0:\r\n                return 'zero';\r\n                break;\r\n        case '+':\r\n                return 'add';\r\n                break;\r\n        case '-':\r\n                return 'substract';\r\n                break;\r\n        case 'X':\r\n                return 'multiply';\r\n                break;\r\n        case '/':\r\n                return 'divide';\r\n                break;\r\n        case 'CE':\r\n                return 'clear';\r\n                break\r\n        case 'C':\r\n            return 'clear';\r\n            break\r\n        default:\r\n                break;\r\n    }\r\n    }\r\n\r\n\r\n\r\nexport default function MyCalculator() {\r\nconst numbers = [7,8,9,4,5,6,1,2,3,0,'.'];\r\nconst [input, setInput] = useState('');\r\n\r\n\r\nfunction BorrarResultado() {\r\n    setInput('');\r\n}\r\n\r\n\r\n    return(\r\n\r\n        <React.Fragment>\r\n            <Container id='mi-calculadora'>\r\n                <Row xs={12}>\r\n                    <Typography variant='h2' id='title-calc' >Hi! I'm a Calculator!</Typography>\r\n                </Row>\r\n                <Row>\r\n                    <Typography variant='h5'id='display'>{input}</Typography>\r\n                </Row>\r\n                <Row xs={3} id='numbers-container'>\r\n                {numbers.map(numbers => (\r\n                        <button onClick={(event)=>{\r\n                            setInput(input + event.target.value)\r\n                        }}\r\n                        value={numbers}\r\n                        key={numbers}\r\n                        id={SetId(numbers)}\r\n                        className='buttons'\r\n                        >{''}{numbers}</button>\r\n                ))}\r\n                     <button\r\n          onClick={(event) => {\r\n            try {\r\n              setInput(\r\n                String(eval(input)).length > 3 &&\r\n                  String(eval(input)).includes(\".\")\r\n                  ? String(eval(input).toFixed(4))\r\n                  : String(eval(input))\r\n              );\r\n            } catch (event) {\r\n              console.log(event);\r\n            }\r\n          }}\r\n          value=\"=\"\r\n          id='equal'\r\n        >\r\n          =\r\n        </button>\r\n                </Row>\r\n                <Row xs={12}>\r\n                <button id='clear' onClick={BorrarResultado}>CLEAR</button>\r\n                <button id='add' className='operaciones' onClick={(event) => setInput(input + event.target.value)} value=\"+\" >+</button>\r\n                <button id='substract' className='operaciones' onClick={(event) => setInput(input + event.target.value)} value=\"-\">{\" \"}-{\" \"}</button>\r\n                <button id='multiply' className='operaciones' onClick={(event) => setInput(input + event.target.value)} value=\"*\" >{\" \"}\r\n          X</button>\r\n                <button id='divide' className='operaciones' onClick={(event) => setInput(input + event.target.value)} value=\"/\">{\" \"}/</button>\r\n                </Row>\r\n            </Container>\r\n        </React.Fragment>\r\n    )\r\n}","import './App.css';\nimport MyCalculator from './components/myCalculator';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MyCalculator />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}